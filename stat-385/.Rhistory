shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")
select(player_name, team, season, mp, raptor_offense:raptor_total)
library(shiny)
library(tidyverse)
raptor = read.csv("data/raptor")
library(shiny)
library(tidyverse)
raptor = read.csv("data/raptor")
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(tidyverse)
raptor = read.csv("data/raptor")
ui = navbarPage(
title = "RAPTOR of Players by (Regular) Season",
tabPanel(title = "Input/Visualization",
titlePanel("Regular Season RAPTOR from 1977 - 2022"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "season",
label = "Season:", choices = sort(unique(raptor$season), decreasing = TRUE),
selected = "2022"
),
selectInput(
inputId = "team",
label = "Team:", choices = c("ALL", sort(unique(raptor$team))),
selected = "ALL"
),
sliderInput(
inputId = "mp",
label = "Minutes Played:",
min = 0,
max = max(raptor$mp),
step = 50,
value = 500,
ticks = FALSE
)
),
mainPanel(plotOutput("Plot"))
)
),
tabPanel(title = "Table", dataTableOutput("table")),
tabPanel("About")
)
server = function(input, output) {
raptor_season = reactive({
raptor |>
filter(season == input$season)
})
observeEvent(
eventExpr = input$season,
handlerExpr = {
updateSelectInput(inputId = "team",
choices = c("ALL", sort(unique(raptor_season()$team))),
selected = "ALL"
)
}
)
raptor_season_team = reactive({
raptor_season_team() |>
filter(team == input$team)
})
observeEvent(
eventExpr = input$team,
handlerExpr = {
updateSliderInput(
inputId = "mp",
value = 500,
max = max(raptor_season_team()$mp))
}
)
library(shiny)
library(tidyverse)
raptor = read.csv("data/raptor")
ui = navbarPage(
title = "RAPTOR of Players by (Regular) Season",
tabPanel(title = "Input/Visualization",
titlePanel("Regular Season RAPTOR from 1977 - 2022"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "season",
label = "Season:", choices = sort(unique(raptor$season), decreasing = TRUE),
selected = "2022"
),
selectInput(
inputId = "team",
label = "Team:", choices = c("ALL", sort(unique(raptor$team))),
selected = "ALL"
),
sliderInput(
inputId = "mp",
label = "Minutes Played:",
min = 0,
max = max(raptor$mp),
step = 50,
value = 500,
ticks = FALSE
)
),
mainPanel(plotOutput("Plot"))
)
),
tabPanel(title = "Table", dataTableOutput("table")),
tabPanel("About")
)
server = function(input, output) {
raptor_season = reactive({
raptor |>
filter(season == input$season)
})
observeEvent(
eventExpr = input$season,
handlerExpr = {
updateSelectInput(inputId = "team",
choices = c("ALL", sort(unique(raptor_season()$team))),
selected = "ALL"
)
}
)
raptor_season_team = reactive({
raptor_season_team() |>
filter(team == input$team)
})
observeEvent(
eventExpr = input$team,
handlerExpr = {
updateSliderInput(
inputId = "mp",
value = 500,
max = max(raptor_season_team()$mp))
}
)
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")
select(player_name, team, season, mp, raptor_offense:raptor_total)
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")
select(player_name, team, season, mp, raptor_offense:raptor_total)
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")
select(player_name, team, season, mp, raptor_offense:raptor_total)
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
View(raptor)
raptor = raptor |>
filter(season_type == "RS")
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")|>
select(player_name, team, season, mp, raptor_offense:raptor_total)
write_csv(x = raptor, file = "data/raptor")
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")|>
select(player_name, team, season, mp, raptor_offense:raptor_total)
write_csv(x = raptor, file = "data/raptor")
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")|>
select(player_name, team, season, mp, raptor_offense:raptor_total)
write_csv(x = raptor, file = "data/raptor")
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")|>
select(player_name, team, season, mp, raptor_offense:raptor_total)
write_csv(x = raptor, file = "data/raptor")
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")|>
select(player_name, team, season, mp, raptor_offense:raptor_total)
write_csv(x = raptor, file = "data/raptor")
runApp()
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
filter(season_type == "RS")|>
select(player_name, team, season, mp, raptor_offense:raptor_total)
write_csv(x = raptor, file = "data/raptor")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
select(player_name, team, season, season_type, mp, raptor_offense:raptor_total)|>
rename("Player Name" = player_name)
raptor = raptor |>
select(player_name, team, season, season_type, mp, raptor_offense:raptor_total)|>
rename("Player Name" = player_name)
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
select(player_name, team, season, season_type, mp, raptor_offense:raptor_total)|>
rename("Player Name" = player_name, "Team" = team, "Season" = season, "Season Type" = season_type, "Minutes Played" = mp, "RAPTOR Offense" = raptor_offense, "RAPTOR Defense" = raptor_defense, "RAPTOR Total" = raptor_total)
View(raptor)
write_csv(x = raptor, file = "data/raptor")
library(shiny)
library(tidyverse)
raptor = read.csv("data/raptor")
runApp()
runApp()
runApp()
runApp()
View(raptor)
library(tidyverse)
url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-raptor/historical_RAPTOR_by_team.csv"
raptor = read_csv(url)
raptor = raptor |>
select(player_name, team, season, season_type, mp, raptor_offense:raptor_total)
write_csv(x = raptor, file = "data/raptor")
View(raptor)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
